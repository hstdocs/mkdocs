{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"SQL Northwind Quest\u00f5es Subtotais do pedido Para cada pedido, calcule o subtotal (formatado com 2 casas decimais) identificado por order_id. (subtotal pode ser obtido pela quantidade x pre\u00e7o e subtraido o desconto) Exemplo: OrderID Subtotal 10248 450.00 ... ... Vendas por ano Agora, calcule o mesmo subtotal por\u00e9m por ano, de cada Ordem de compra (ShippedDate). Exemplo: OrderId Subtotal Ano 10939 1,930.10 1992 ... ... ... Venda dos colaboradores por Pa\u00eds Consulte a quantidade de vendas por colaborador. Exemplo: EmployeeID Qtde_sales 10 999 ... ... Calculando Totais Supondo que precisemos consultar o n\u00famero de pedidos e produtos vendidos para cada data dedo m\u00eas Junho de 1997. Exemplo: OrderDate Num_Orders Num_Products 02/06/1997 1 9 03/06/1997 6 20 ... ...","title":"Home"},{"location":"#sql","text":"","title":"SQL"},{"location":"#northwind","text":"Quest\u00f5es Subtotais do pedido Para cada pedido, calcule o subtotal (formatado com 2 casas decimais) identificado por order_id. (subtotal pode ser obtido pela quantidade x pre\u00e7o e subtraido o desconto) Exemplo: OrderID Subtotal 10248 450.00 ... ... Vendas por ano Agora, calcule o mesmo subtotal por\u00e9m por ano, de cada Ordem de compra (ShippedDate). Exemplo: OrderId Subtotal Ano 10939 1,930.10 1992 ... ... ... Venda dos colaboradores por Pa\u00eds Consulte a quantidade de vendas por colaborador. Exemplo: EmployeeID Qtde_sales 10 999 ... ... Calculando Totais Supondo que precisemos consultar o n\u00famero de pedidos e produtos vendidos para cada data dedo m\u00eas Junho de 1997. Exemplo: OrderDate Num_Orders Num_Products 02/06/1997 1 9 03/06/1997 6 20 ... ...","title":"Northwind"},{"location":"alta_disponibilidade/","text":"Alta disponibilidade Site oficial: Postgres repmgr O repmgr \u00e9 uma ferramenta open source, desenvolvida inicialmente pela 2ndQuadrant (foi adquirida pela EDB) para gerenciamento de clusters de replica\u00e7\u00e3o PostgreSQL. O repmgr traz facilidades de monitoramento de um cluster de replica\u00e7\u00e3o e dentre seus recursos destaca-se o failover autom\u00e1tico. Configura\u00e7\u00e3o Pr\u00e9 requisitos para realizar a instala\u00e7\u00e3o Replica\u00e7\u00e3o configurada MASTER Download repmgr Fa\u00e7a download da \u00faltima vers\u00e3o do repmgr . wget https://repmgr.org/download/repmgr-5.3.3.tar.gz Descompacte o arquivo (root) cd /repmgr #Diret\u00f3rio em que foi baixado o repmgr gunzip repmgr-5.3.3.tar.gz #vers\u00e3o de exemplo tar -xf repmgr-5.3.3.tar Instalar repmgr apt-get install -y postgresql-14-repmgr criar usu\u00e1rio e base de dados Logar com usu\u00e1rio postgres su - postgres Criar super usu\u00e1rio repmgr createuser -s repmgr Criar base de dados repmgr createdb repmgr -O repmgr Volte ao usu\u00e1rio root. exit Configurar par\u00e2metro postgresql.conf # Digite a vers\u00e3o majorit\u00e1ria do PostgreSQL que deseja instalar: read -p 'Vers\u00e3o majorit\u00e1ria do PostgreSQL: ' PGMAJOR # Vari\u00e1vel de ambiente do Diret\u00f3rio de dados do PostgreSQL export PGCONF = \"/etc/postgresql/ ${ PGMAJOR } /main\" sed -i 's/^shared_preload_libraries = /#shared_preload_libraries = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#shared_preload_libraries.*\\):\\1\\nshared_preload_libraries = 'repmgr' :g\" -i ${ PGCONF } /postgresql.conf Configurar par\u00e2metros pg_hba.conf # Digite os IPs dos n\u00f3s: read -p 'Digite os IPs dos n\u00f3s (separados por um espa\u00e7o): ' IP cat << EOF >> ${PGCONF}/pg_hba.conf # REPMGR ====================================================================== EOF echo \"local repmgr repmgr trust\" >> \\ ${ PGCONF } /pg_hba.conf echo \"local replication repmgr trust\" >> \\ ${ PGCONF } /pg_hba.conf cat << EOF >> ${PGCONF}/pg_hba.conf # repmgr database EOF for i in ${ IP } do echo \"host repmgr repmgr ${ i } /32 trust\" >> \\ ${ PGCONF } /pg_hba.conf done # Pula uma linha e adiciona um cabe\u00e7alho referente \u00e0 replica\u00e7\u00e3o: cat << EOF >> ${PGCONF}/pg_hba.conf # Replication EOF # Para cada IP adicionar uma linha referente \u00e0 replica\u00e7\u00e3o: for i in ${ IP } do echo \"host replication repmgr ${ i } /32 trust\" >> \\ ${ PGCONF } /pg_hba.conf done # Adiciona linha de encerramento: cat << EOF >> ${PGCONF}/pg_hba.conf # ============================================================================= EOF Reiniciar servi\u00e7o systemctl restart postgresql Configurar repmgr Copiar arquivo de exemplo baixado para diret\u00f3rio do postgres cp /repmgr/repmgr-5.3.3/repmgr.conf.sample /var/lib/postgresql/repmgr.conf Mudar dono do arquivo chown postgres:postgres /var/lib/postgresql/repmgr.conf Modificar par\u00e2metros # Vari\u00e1vel de ambiente do arquivo de configura\u00e7\u00e3o REPMGR export REPMGRFILE = \"/var/lib/postgresql/repmgr.conf\" sed -i 's/^node_id= /#node_id= /' ${ REPMGRFILE } sed \"s:\\(^#node_id=.*\\):\\1\\nnode_id = 1:g\" -i ${ REPMGRFILE } sed -i 's/^node_name= /#node_name= /' ${ REPMGRFILE } sed \"s:\\(^#node_name=.*\\):\\1\\nnode_name = 'ubuntu-1':g\" -i ${ REPMGRFILE } sed -i 's/^conninfo= /#conninfo= /' ${ REPMGRFILE } sed \"s:\\(^#conninfo=.*\\):\\1\\nconninfo = 'host=172.19.0.2 port=5432 dbname=repmgr user=repmgr':g\" -i ${ REPMGRFILE } sed -i 's/^data_directory= /#data_directory= /' ${ REPMGRFILE } sed \"s:\\(^#data_directory=.*\\):\\1\\ndata_directory='/var/lib/postgresql/14/main':g\" -i ${ REPMGRFILE } sed -i 's/^primary_follow_timeout= /#primary_follow_timeout= /' ${ REPMGRFILE } sed \"s:\\(^#primary_follow_timeout=.*\\):\\1\\nprimary_follow_timeout = 10:g\" -i ${ REPMGRFILE } sed -i 's/^failover= /#failover= /' ${ REPMGRFILE } sed \"s:\\(^#failover=.*\\):\\1\\nfailover = 'automatic':g\" -i ${ REPMGRFILE } sed -i 's/^promote_command= /#promote_command= /' ${ REPMGRFILE } sed \"s:\\(^#promote_command=.*\\):\\1\\npromote_command = 'repmgr standby promote -f /var/lib/postgresql/repmgr.conf':g\" -i ${ REPMGRFILE } sed -i 's/^follow_command= /#follow_command= /' ${ REPMGRFILE } sed \"s:\\(^#follow_command=.*\\):\\1\\nfollow_command = 'repmgr standby follow -f /var/lib/postgresql/repmgr.conf -W --upstream-nod-id=2':g\" -i ${ REPMGRFILE } Copiar repmgr Copiar arquivo de configura\u00e7\u00e3o para Standby scp ${ REPMGRFILE } postgres@172.19.0.3:/var/lib/postgresql/ STANDBY Instalar repmgr apt-get install -y postgresql-14-repmgr Configurar repmgr Modificar par\u00e2metros # Vari\u00e1vel de ambiente do arquivo de configura\u00e7\u00e3o REPMGR export REPMGRFILE = \"/var/lib/postgresql/repmgr.conf\" sed -i 's/^node_id = /#node_id = /' ${ REPMGRFILE } sed \"s:\\(^#node_id=.*\\):\\1\\nnode_id = 2:g\" -i ${ REPMGRFILE } sed -i 's/^node_name = /#node_name = /' ${ REPMGRFILE } sed \"s:\\(^#node_name=.*\\):\\1\\nnode_name = 'ubuntu-2':g\" -i ${ REPMGRFILE } sed -i 's/^conninfo = /#conninfo = /' ${ REPMGRFILE } sed \"s:\\(^#conninfo =.*\\):\\1\\nconninfo = 'host=172.19.0.3 port=5432 dbname=repmgr user=repmgr':g\" -i ${ REPMGRFILE } sed -i 's/^follow_command = /#follow_command = /' ${ REPMGRFILE } sed \"s:\\(^#follow_command =.*\\):\\1\\nfollow_command = 'repmgr standby follow -f /var/lib/postgresql/repmgr.conf -W --upstream-nod-id=1':g\" -i ${ REPMGRFILE } Parar servi\u00e7o postgres systemctl stop postgresql MASTER Registrar Nodes Acessar com usu\u00e1rio postgres su - postgres Incluir bin\u00e1rios postgres na vari\u00e1vel PATH echo \"PATH= $PATH :/usr/lib/postgresql/14/bin/\" >> .bash_profile . .bash_profile Registrar Node como Primary repmgr -f repmgr.conf master register Validando registro do Node psql -d repmgr -U repmgr select * from events ; select node_id , active , node_name , type , upstream_node_id , upstream_node_id , conninfo from nodes \\ watch 10 ; STANDBY Registrar Nodes Acessar com usu\u00e1rio postgres su - postgres Incluir bin\u00e1rios postgres na vari\u00e1vel PATH echo \"PATH= $PATH :/usr/lib/postgresql/14/bin/\" >> .bash_profile . .bash_profile Copiar configura\u00e7\u00f5es Master scp postgres@172.19.0.2:/etc/postgresql/14/main/pg_hba.conf /etc/postgresql/14/main/ scp postgres@172.19.0.2:/etc/postgresql/14/main/postgresql.conf /etc/postgresql/14/main/ Volte ao usu\u00e1rio root. exit Startar servi\u00e7o postgres systemctl start postgresql Acessar com usu\u00e1rio postgres su - postgres Registrar Node como Secundary repmgr -f repmgr.conf standby register -F Validando registro do Node psql -d repmgr -U repmgr select * from events ; select node_id , active , node_name , type , upstream_node_id , conninfo from nodes \\ watch 10 ; Ativar monitoramento repmgr # Monitorando com repmgr repmgrd -f repmgr.conf --daemonize = false --no-pid-file --verbose failback Execute o Failback Conecte com o usu\u00e1rio postgres. su - postgres Registre o Node como Standby repmgr -f repmgr.conf standby register repmgr -f repmgr.conf standby register -F Outros comandos # Acessar com usu\u00e1rio postgres su - postgres # Monitorando repmgr repmgrd -f repmgr.conf --verbose repmgr service status repmgr cluster event repmgr -f repmgr.conf cluster show # Standby repmgr -f repmgr.conf standby switchover repmgr standby switchover --force-rewind --siblings-follow --dry-run repmgr -f repmgr.conf standby follow repmgr node status repmgr node check # Clonar usando repmgr repmgr -h 172 .19.0.3 -U repmgr -d repmgr -f repmgr.conf standby clone --dry-run repmgr -h 172 .19.0.3 -U repmgr -d repmgr -f repmgr.conf standby clone -F","title":"Alta disponibilidade"},{"location":"alta_disponibilidade/#alta-disponibilidade","text":"Site oficial: Postgres repmgr O repmgr \u00e9 uma ferramenta open source, desenvolvida inicialmente pela 2ndQuadrant (foi adquirida pela EDB) para gerenciamento de clusters de replica\u00e7\u00e3o PostgreSQL. O repmgr traz facilidades de monitoramento de um cluster de replica\u00e7\u00e3o e dentre seus recursos destaca-se o failover autom\u00e1tico.","title":"Alta disponibilidade"},{"location":"alta_disponibilidade/#configuracao","text":"","title":"Configura\u00e7\u00e3o"},{"location":"alta_disponibilidade/#pre-requisitos-para-realizar-a-instalacao","text":"Replica\u00e7\u00e3o configurada","title":"Pr\u00e9 requisitos para realizar a instala\u00e7\u00e3o"},{"location":"alta_disponibilidade/#master","text":"","title":"MASTER"},{"location":"alta_disponibilidade/#download-repmgr","text":"Fa\u00e7a download da \u00faltima vers\u00e3o do repmgr . wget https://repmgr.org/download/repmgr-5.3.3.tar.gz Descompacte o arquivo (root) cd /repmgr #Diret\u00f3rio em que foi baixado o repmgr gunzip repmgr-5.3.3.tar.gz #vers\u00e3o de exemplo tar -xf repmgr-5.3.3.tar","title":"Download repmgr"},{"location":"alta_disponibilidade/#instalar-repmgr","text":"apt-get install -y postgresql-14-repmgr","title":"Instalar repmgr"},{"location":"alta_disponibilidade/#criar-usuario-e-base-de-dados","text":"Logar com usu\u00e1rio postgres su - postgres Criar super usu\u00e1rio repmgr createuser -s repmgr Criar base de dados repmgr createdb repmgr -O repmgr Volte ao usu\u00e1rio root. exit","title":"criar usu\u00e1rio e base de dados"},{"location":"alta_disponibilidade/#configurar-parametro-postgresqlconf","text":"# Digite a vers\u00e3o majorit\u00e1ria do PostgreSQL que deseja instalar: read -p 'Vers\u00e3o majorit\u00e1ria do PostgreSQL: ' PGMAJOR # Vari\u00e1vel de ambiente do Diret\u00f3rio de dados do PostgreSQL export PGCONF = \"/etc/postgresql/ ${ PGMAJOR } /main\" sed -i 's/^shared_preload_libraries = /#shared_preload_libraries = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#shared_preload_libraries.*\\):\\1\\nshared_preload_libraries = 'repmgr' :g\" -i ${ PGCONF } /postgresql.conf","title":"Configurar par\u00e2metro postgresql.conf"},{"location":"alta_disponibilidade/#configurar-parametros-pg_hbaconf","text":"# Digite os IPs dos n\u00f3s: read -p 'Digite os IPs dos n\u00f3s (separados por um espa\u00e7o): ' IP cat << EOF >> ${PGCONF}/pg_hba.conf # REPMGR ====================================================================== EOF echo \"local repmgr repmgr trust\" >> \\ ${ PGCONF } /pg_hba.conf echo \"local replication repmgr trust\" >> \\ ${ PGCONF } /pg_hba.conf cat << EOF >> ${PGCONF}/pg_hba.conf # repmgr database EOF for i in ${ IP } do echo \"host repmgr repmgr ${ i } /32 trust\" >> \\ ${ PGCONF } /pg_hba.conf done # Pula uma linha e adiciona um cabe\u00e7alho referente \u00e0 replica\u00e7\u00e3o: cat << EOF >> ${PGCONF}/pg_hba.conf # Replication EOF # Para cada IP adicionar uma linha referente \u00e0 replica\u00e7\u00e3o: for i in ${ IP } do echo \"host replication repmgr ${ i } /32 trust\" >> \\ ${ PGCONF } /pg_hba.conf done # Adiciona linha de encerramento: cat << EOF >> ${PGCONF}/pg_hba.conf # ============================================================================= EOF","title":"Configurar par\u00e2metros pg_hba.conf"},{"location":"alta_disponibilidade/#reiniciar-servico","text":"systemctl restart postgresql","title":"Reiniciar servi\u00e7o"},{"location":"alta_disponibilidade/#configurar-repmgr","text":"Copiar arquivo de exemplo baixado para diret\u00f3rio do postgres cp /repmgr/repmgr-5.3.3/repmgr.conf.sample /var/lib/postgresql/repmgr.conf Mudar dono do arquivo chown postgres:postgres /var/lib/postgresql/repmgr.conf Modificar par\u00e2metros # Vari\u00e1vel de ambiente do arquivo de configura\u00e7\u00e3o REPMGR export REPMGRFILE = \"/var/lib/postgresql/repmgr.conf\" sed -i 's/^node_id= /#node_id= /' ${ REPMGRFILE } sed \"s:\\(^#node_id=.*\\):\\1\\nnode_id = 1:g\" -i ${ REPMGRFILE } sed -i 's/^node_name= /#node_name= /' ${ REPMGRFILE } sed \"s:\\(^#node_name=.*\\):\\1\\nnode_name = 'ubuntu-1':g\" -i ${ REPMGRFILE } sed -i 's/^conninfo= /#conninfo= /' ${ REPMGRFILE } sed \"s:\\(^#conninfo=.*\\):\\1\\nconninfo = 'host=172.19.0.2 port=5432 dbname=repmgr user=repmgr':g\" -i ${ REPMGRFILE } sed -i 's/^data_directory= /#data_directory= /' ${ REPMGRFILE } sed \"s:\\(^#data_directory=.*\\):\\1\\ndata_directory='/var/lib/postgresql/14/main':g\" -i ${ REPMGRFILE } sed -i 's/^primary_follow_timeout= /#primary_follow_timeout= /' ${ REPMGRFILE } sed \"s:\\(^#primary_follow_timeout=.*\\):\\1\\nprimary_follow_timeout = 10:g\" -i ${ REPMGRFILE } sed -i 's/^failover= /#failover= /' ${ REPMGRFILE } sed \"s:\\(^#failover=.*\\):\\1\\nfailover = 'automatic':g\" -i ${ REPMGRFILE } sed -i 's/^promote_command= /#promote_command= /' ${ REPMGRFILE } sed \"s:\\(^#promote_command=.*\\):\\1\\npromote_command = 'repmgr standby promote -f /var/lib/postgresql/repmgr.conf':g\" -i ${ REPMGRFILE } sed -i 's/^follow_command= /#follow_command= /' ${ REPMGRFILE } sed \"s:\\(^#follow_command=.*\\):\\1\\nfollow_command = 'repmgr standby follow -f /var/lib/postgresql/repmgr.conf -W --upstream-nod-id=2':g\" -i ${ REPMGRFILE }","title":"Configurar repmgr"},{"location":"alta_disponibilidade/#copiar-repmgr","text":"Copiar arquivo de configura\u00e7\u00e3o para Standby scp ${ REPMGRFILE } postgres@172.19.0.3:/var/lib/postgresql/","title":"Copiar repmgr"},{"location":"alta_disponibilidade/#standby","text":"","title":"STANDBY"},{"location":"alta_disponibilidade/#instalar-repmgr_1","text":"apt-get install -y postgresql-14-repmgr","title":"Instalar repmgr"},{"location":"alta_disponibilidade/#configurar-repmgr_1","text":"Modificar par\u00e2metros # Vari\u00e1vel de ambiente do arquivo de configura\u00e7\u00e3o REPMGR export REPMGRFILE = \"/var/lib/postgresql/repmgr.conf\" sed -i 's/^node_id = /#node_id = /' ${ REPMGRFILE } sed \"s:\\(^#node_id=.*\\):\\1\\nnode_id = 2:g\" -i ${ REPMGRFILE } sed -i 's/^node_name = /#node_name = /' ${ REPMGRFILE } sed \"s:\\(^#node_name=.*\\):\\1\\nnode_name = 'ubuntu-2':g\" -i ${ REPMGRFILE } sed -i 's/^conninfo = /#conninfo = /' ${ REPMGRFILE } sed \"s:\\(^#conninfo =.*\\):\\1\\nconninfo = 'host=172.19.0.3 port=5432 dbname=repmgr user=repmgr':g\" -i ${ REPMGRFILE } sed -i 's/^follow_command = /#follow_command = /' ${ REPMGRFILE } sed \"s:\\(^#follow_command =.*\\):\\1\\nfollow_command = 'repmgr standby follow -f /var/lib/postgresql/repmgr.conf -W --upstream-nod-id=1':g\" -i ${ REPMGRFILE }","title":"Configurar repmgr"},{"location":"alta_disponibilidade/#parar-servico-postgres","text":"systemctl stop postgresql","title":"Parar servi\u00e7o postgres"},{"location":"alta_disponibilidade/#master_1","text":"","title":"MASTER"},{"location":"alta_disponibilidade/#registrar-nodes","text":"Acessar com usu\u00e1rio postgres su - postgres Incluir bin\u00e1rios postgres na vari\u00e1vel PATH echo \"PATH= $PATH :/usr/lib/postgresql/14/bin/\" >> .bash_profile . .bash_profile Registrar Node como Primary repmgr -f repmgr.conf master register Validando registro do Node psql -d repmgr -U repmgr select * from events ; select node_id , active , node_name , type , upstream_node_id , upstream_node_id , conninfo from nodes \\ watch 10 ;","title":"Registrar Nodes"},{"location":"alta_disponibilidade/#standby_1","text":"","title":"STANDBY"},{"location":"alta_disponibilidade/#registrar-nodes_1","text":"Acessar com usu\u00e1rio postgres su - postgres Incluir bin\u00e1rios postgres na vari\u00e1vel PATH echo \"PATH= $PATH :/usr/lib/postgresql/14/bin/\" >> .bash_profile . .bash_profile Copiar configura\u00e7\u00f5es Master scp postgres@172.19.0.2:/etc/postgresql/14/main/pg_hba.conf /etc/postgresql/14/main/ scp postgres@172.19.0.2:/etc/postgresql/14/main/postgresql.conf /etc/postgresql/14/main/ Volte ao usu\u00e1rio root. exit Startar servi\u00e7o postgres systemctl start postgresql Acessar com usu\u00e1rio postgres su - postgres Registrar Node como Secundary repmgr -f repmgr.conf standby register -F Validando registro do Node psql -d repmgr -U repmgr select * from events ; select node_id , active , node_name , type , upstream_node_id , conninfo from nodes \\ watch 10 ;","title":"Registrar Nodes"},{"location":"alta_disponibilidade/#ativar-monitoramento-repmgr","text":"# Monitorando com repmgr repmgrd -f repmgr.conf --daemonize = false --no-pid-file --verbose failback Execute o Failback Conecte com o usu\u00e1rio postgres. su - postgres Registre o Node como Standby repmgr -f repmgr.conf standby register repmgr -f repmgr.conf standby register -F Outros comandos # Acessar com usu\u00e1rio postgres su - postgres # Monitorando repmgr repmgrd -f repmgr.conf --verbose repmgr service status repmgr cluster event repmgr -f repmgr.conf cluster show # Standby repmgr -f repmgr.conf standby switchover repmgr standby switchover --force-rewind --siblings-follow --dry-run repmgr -f repmgr.conf standby follow repmgr node status repmgr node check # Clonar usando repmgr repmgr -h 172 .19.0.3 -U repmgr -d repmgr -f repmgr.conf standby clone --dry-run repmgr -h 172 .19.0.3 -U repmgr -d repmgr -f repmgr.conf standby clone -F","title":"Ativar monitoramento repmgr"},{"location":"failback/","text":"Failover Failover: Postgres failback \u00c9 o processo de reintegrar ao cluster de replica\u00e7\u00e3o um servidor que falhou. Configura\u00e7\u00e3o Antigo Master Tornando o antigo prim\u00e1rio, novo secund\u00e1rio, online novamente. Certifique-se que ningu\u00e9m esteja conectado nessa base. Al\u00e9m do servi\u00e7o parado, edite o arquivo de configura\u00e7\u00e3o que controla a autentica\u00e7\u00e3o do client e comente os acessos da aplica\u00e7\u00e3o com a base. Utilize o superusu\u00e1rio. sudo -i Inicie o servi\u00e7o do PostgreSQL 14 e na sequ\u00eancia pare novamente o servi\u00e7o. Esse processo far\u00e1 com que o PostgreSQL identifique que os cronogramas dos clusters foram divergidos. systemctl start postgresql-14 systemctl stop postgresql-14 pg_rewind Execute o pg_rewind para sincronizar os clusters. Conecte com o usu\u00e1rio postgres. su - postgres Execute o pg_rewind. # Altere o IP e Senha para o novo Master /usr/lib/postgresql/14/bin/pg_rewind \\ --target-pgdata /var/lib/postgresql/14/main \\ --source-server = \"host={IP_MASTER} port=5432 user=postgres dbname=postgres password={SENHA_MASTER}\" \\ --progress Edite o arquivo \"postgresql.auto.conf\". vim /var/lib//postgresql/14/main/postgresql.auto.conf O arquivo dever\u00e1 conter os seguintes par\u00e2metros listen_addresses = '*' primary_conninfo = 'user=rep password=PGrep##76##54 host=IP_DO_NOVO_PRIMARIO port=5432 sslmode=prefer sslcompression=0 gssencmode=prefer krbsrvname=postgres target_session_attrs=any' restore_command = 'scp postgres@IP_DO_NOVO_PRIMARIO:/opt/pgsql/archives/%f %p' Crie o arquivo \"standby.signal\". touch /var/lib/postgresql/14/main/standby.signal Modifique a permiss\u00e3o do arquivo criado no passo anterior chmod 600 /var/lib/postgresql/14/main/standby.signal Utilize o superusu\u00e1rio. exit Inicie o servi\u00e7o. systemctl start postgresql-14","title":"Failback"},{"location":"failback/#failover","text":"Failover: Postgres failback \u00c9 o processo de reintegrar ao cluster de replica\u00e7\u00e3o um servidor que falhou.","title":"Failover"},{"location":"failback/#configuracao","text":"","title":"Configura\u00e7\u00e3o"},{"location":"failback/#antigo-master","text":"Tornando o antigo prim\u00e1rio, novo secund\u00e1rio, online novamente. Certifique-se que ningu\u00e9m esteja conectado nessa base. Al\u00e9m do servi\u00e7o parado, edite o arquivo de configura\u00e7\u00e3o que controla a autentica\u00e7\u00e3o do client e comente os acessos da aplica\u00e7\u00e3o com a base. Utilize o superusu\u00e1rio. sudo -i Inicie o servi\u00e7o do PostgreSQL 14 e na sequ\u00eancia pare novamente o servi\u00e7o. Esse processo far\u00e1 com que o PostgreSQL identifique que os cronogramas dos clusters foram divergidos. systemctl start postgresql-14 systemctl stop postgresql-14","title":"Antigo Master"},{"location":"failback/#pg_rewind","text":"Execute o pg_rewind para sincronizar os clusters. Conecte com o usu\u00e1rio postgres. su - postgres Execute o pg_rewind. # Altere o IP e Senha para o novo Master /usr/lib/postgresql/14/bin/pg_rewind \\ --target-pgdata /var/lib/postgresql/14/main \\ --source-server = \"host={IP_MASTER} port=5432 user=postgres dbname=postgres password={SENHA_MASTER}\" \\ --progress Edite o arquivo \"postgresql.auto.conf\". vim /var/lib//postgresql/14/main/postgresql.auto.conf O arquivo dever\u00e1 conter os seguintes par\u00e2metros listen_addresses = '*' primary_conninfo = 'user=rep password=PGrep##76##54 host=IP_DO_NOVO_PRIMARIO port=5432 sslmode=prefer sslcompression=0 gssencmode=prefer krbsrvname=postgres target_session_attrs=any' restore_command = 'scp postgres@IP_DO_NOVO_PRIMARIO:/opt/pgsql/archives/%f %p' Crie o arquivo \"standby.signal\". touch /var/lib/postgresql/14/main/standby.signal Modifique a permiss\u00e3o do arquivo criado no passo anterior chmod 600 /var/lib/postgresql/14/main/standby.signal Utilize o superusu\u00e1rio. exit Inicie o servi\u00e7o. systemctl start postgresql-14","title":"pg_rewind"},{"location":"failover/","text":"Failover Failover: Postgres failover \u00c9 a situa\u00e7\u00e3o em que o servidor prim\u00e1rio est\u00e1 fora e um dos standbys assume como prim\u00e1rio para fins de alta disponibilidade. Configura\u00e7\u00e3o Master Utilize o superusu\u00e1rio. sudo -i Pare o servi\u00e7o. systemctl stop postgresql-14 Standby Utilize o superusu\u00e1rio. sudo -i Conecte com o usu\u00e1rio postgres. su - postgres Conecte a base de dados. psql Avalie se a base est\u00e1 em modo de recupera\u00e7\u00e3o. SELECT pg_is_in_recovery (); Promova o novo prim\u00e1rio. SELECT pg_promote (); Valide se a base est\u00e1 em modo de escrita. SELECT pg_is_in_recovery ();","title":"Failover"},{"location":"failover/#failover","text":"Failover: Postgres failover \u00c9 a situa\u00e7\u00e3o em que o servidor prim\u00e1rio est\u00e1 fora e um dos standbys assume como prim\u00e1rio para fins de alta disponibilidade.","title":"Failover"},{"location":"failover/#configuracao","text":"","title":"Configura\u00e7\u00e3o"},{"location":"failover/#master","text":"Utilize o superusu\u00e1rio. sudo -i Pare o servi\u00e7o. systemctl stop postgresql-14","title":"Master"},{"location":"failover/#standby","text":"Utilize o superusu\u00e1rio. sudo -i Conecte com o usu\u00e1rio postgres. su - postgres Conecte a base de dados. psql Avalie se a base est\u00e1 em modo de recupera\u00e7\u00e3o. SELECT pg_is_in_recovery (); Promova o novo prim\u00e1rio. SELECT pg_promote (); Valide se a base est\u00e1 em modo de escrita. SELECT pg_is_in_recovery ();","title":"Standby"},{"location":"instalacao/","text":"Instala\u00e7\u00e3o Site oficial: Postgres Instala\u00e7\u00e3o via pacotes Ubuntu Tipo Localiza\u00e7\u00e3o Instala\u00e7\u00e3o Instala\u00e7\u00e3o Con\ufb01gura\u00e7\u00e3o /etc/postgresql/VERS\u00c3O MAJORIT\u00c1RIA/main Dados /var/lib/postgresql/VERS\u00c3O MAJORIT\u00c1RIA/main Bin\u00e1rios /usr/lib/postgresql/VERS\u00c3O MAJORIT\u00c1RIA/bin Pr\u00e9 requisitos para realizar a instala\u00e7\u00e3o Executar a atualiza\u00e7\u00e3o do SO (Opcional): apt -y update Iptables: iptables -A INPUT -p tcp --dport 5432 -j ACCEPT iptables -A INPUT -p udp --dport 5432 -j ACCEPT systemctl restart iptables Configure os hosts: vim /etc/hosts IP_SERVER_A hostname_node_a IP_SERVER_B hostname_node_b Salve o arquivo: :wq Vari\u00e1vies # Digite a vers\u00e3o majorit\u00e1ria do PostgreSQL que deseja instalar: read -p 'Vers\u00e3o majorit\u00e1ria do PostgreSQL: ' PGMAJOR # Vari\u00e1vel de ambiente Port read -p 'Digite a Porta do PostgreSQL: ' PGPORT # Vari\u00e1vel de ambiente do Diret\u00f3rio de dados do PostgreSQL export PGCONF = \"/etc/postgresql/ ${ PGMAJOR } /main\" Instala\u00e7\u00e3o sudo sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list' wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - sudo apt-get -y update sudo apt-get -y install postgresql- ${ PGMAJOR } Altera\u00e7\u00f5es no postgresql.conf # Altera\u00e7\u00f5es no postgresql.conf via sed (Habilitar quais endere\u00e7os IP o postgres deve ouvir). # Abra o arquivo \"postgresql.conf\" que se encontra no diret\u00f3rio \"/etc/postgresql/${PGMAJOR}/main\". # vim /etc/postgresql/${PGMAJOR}/main/postgresql.conf # listen_addresses = \u2019*\u2019 sed \"s:\\(^#listen_addresses.*\\):\\1\\nlisten_addresses = '*':g\" -i ${ PGCONF } /postgresql.conf # port = sed \"s:\\(^#port.*\\):\\1\\nport = ${ PGPORT } :g\" -i ${ PGCONF } /postgresql.conf # - Where to Log - # log_destination = 'stderr' sed -i 's/^log_destination/#log_destination/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_destination.*\\):\\1\\nlog_destination = 'stderr':g\" -i ${ PGCONF } /postgresql.conf #logging_collector = on sed -i 's/^logging_collector/#logging_collector/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#logging_collector.*\\):\\1\\nlogging_collector = on:g\" -i ${ PGCONF } /postgresql.conf #log_directory = 'log' sed -i 's/^log_directory/#log_directory/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_directory.*\\):\\1\\nlog_directory = 'log':g\" -i ${ PGCONF } /postgresql.conf #log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' sed -i 's/^log_filename/#log_filename/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_filename.*\\):\\1\\nlog_filename = 'postgresql-%Y-%m-%d_%H%M%S.log':g\" -i ${ PGCONF } /postgresql.conf #log_truncate_on_rotation = on sed -i 's/^log_truncate_on_rotation/#log_truncate_on_rotation/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_truncate_on_rotation.*\\):\\1\\nlog_truncate_on_rotation = on:g\" -i ${ PGCONF } /postgresql.conf #log_rotation_age = 1d sed -i 's/^log_rotation_age/#log_rotation_age/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_rotation_age.*\\):\\1\\nlog_rotation_age = 1d:g\" -i ${ PGCONF } /postgresql.conf #log_rotation_size = 64MB sed -i 's/^log_rotation_size/#log_rotation_size/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_rotation_size.*\\):\\1\\nlog_rotation_size = 64MB:g\" -i ${ PGCONF } /postgresql.conf # - When to Log - #log_min_messages = notice sed -i 's/^log_min_messages/#log_min_messages/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_min_messages.*\\):\\1\\nlog_min_messages = notice:g\" -i ${ PGCONF } /postgresql.conf #log_min_error_statement = warning sed -i 's/^log_min_error_statement/#log_min_error_statement/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_min_error_statement.*\\):\\1\\nlog_min_error_statement = warning:g\" -i ${ PGCONF } /postgresql.conf #log_min_duration_statement = 4000 sed -i 's/^log_min_duration_statement/#log_min_duration_statement/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_min_duration_statement.*\\):\\1\\nlog_min_duration_statement = 4000:g\" -i ${ PGCONF } /postgresql.conf # - What to Log - #log_checkpoints = on sed -i 's/^log_checkpoints/#log_checkpoints/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_checkpoints.*\\):\\1\\nlog_checkpoints = on:g\" -i ${ PGCONF } /postgresql.conf #log_connections = on sed -i 's/^log_connections/#log_connections/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_connections.*\\):\\1\\nlog_connections = on:g\" -i ${ PGCONF } /postgresql.conf #log_disconnections = on sed -i 's/^log_disconnections/#log_disconnections/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_disconnections.*\\):\\1\\nlog_disconnections = on:g\" -i ${ PGCONF } /postgresql.conf #log_duration = off sed -i 's/^log_duration/#log_duration/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_duration.*\\):\\1\\nlog_duration = off:g\" -i ${ PGCONF } /postgresql.conf #log_error_verbosity = default sed -i 's/^log_error_verbosity/#log_error_verbosity/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_error_verbosity.*\\):\\1\\nlog_error_verbosity = default:g\" -i ${ PGCONF } /postgresql.conf #log_hostname = off sed -i 's/^log_hostname/#log_hostname/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_hostname.*\\):\\1\\nlog_hostname = off:g\" -i ${ PGCONF } /postgresql.conf #log_line_prefix = '%t [%p]: [%l-1] db=%d,user=%u,app=%a,client=%h ' sed -i 's/^log_line_prefix/#log_line_prefix/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_line_prefix.*\\):\\1\\nlog_line_prefix = \\'%t [%p]\\:\\ [%l-1] db=%d,user=%u,app=%a,client=%h \\':g\" -i ${ PGCONF } /postgresql.conf #log_lock_waits = on sed -i 's/^log_lock_waits/#log_lock_waits/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_lock_waits.*\\):\\1\\nlog_lock_waits = on:g\" -i ${ PGCONF } /postgresql.conf #log_statement = 'ddl' sed -i \"s/^log_statement = 'none'/#log_statement = 'none'/\" ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_statement =.*\\):\\1\\nlog_statement = 'ddl':g\" -i ${ PGCONF } /postgresql.conf #log_temp_files = 0 sed -i 's/^log_temp_files/#log_temp_files/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_temp_files.*\\):\\1\\nlog_temp_files = 0:g\" -i ${ PGCONF } /postgresql.conf #password_encryption = scram-sha-256 sed \"s:\\(^#password_encryption.*\\):\\1\\npassword_encryption = scram-sha-256:g\" -i ${ PGCONF } /postgresql.conf #client_min_messages = log sed -i 's/^client_min_messages/#client_min_messages/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#client_min_messages.*\\):\\1\\nclient_min_messages = log:g\" -i ${ PGCONF } /postgresql.conf #authentication_timeout = 1min sed \"s:\\(^#authentication_timeout.*\\):\\1\\nauthentication_timeout = 1min:g\" -i ${ PGCONF } /postgresql.conf #client_connection_check_interval = 20s sed \"s:\\(^#client_connection_check_interval.*\\):\\1\\nclient_connection_check_interval = 20s:g\" -i ${ PGCONF } /postgresql.conf #superuser_reserved_connections = 3 sed \"s:\\(^#superuser_reserved_connections.*\\):\\1\\nsuperuser_reserved_connections = 3:g\" -i ${ PGCONF } /postgresql.conf Startar e Verificar status PostgreSQL # habilitar postgresql systemctl enable --now postgresql systemctl start postgresql #systemctl start postgresql@${PGMAJOR}-main systemctl status postgresql #ou # Exibindo a vers\u00e3o do PostgreSQL #pg_lsclusters #service postgresql status #systemctl status postgresql@${PGMAJOR}-main #systemctl stop postgresql@14-main Dicas de configura\u00e7\u00e3o lsmem # Memory lscpu # CPU leopard pgconfig #================================ E X E M P L O ================================ #max_connections = 100 export pg_max_connections = \"100\" #shared_buffers = 512MB export pg_shared_buffers = \"512MB\" #work_mem = 2621kB export pg_work_mem = \"2621kB\" #maintenance_work_mem = 128MB export pg_maintenance_work_mem = \"128MB\" #effective_io_concurrency = 200 export pg_effective_io_concurrency = \"200\" #wal_buffers = 16MB export pg_wal_buffers = \"16MB\" #checkpoint_completion_target = 0.9 export pg_checkpoint_completion_target = \"0.9\" #min_wal_size = 1GB export pg_min_wal_size = \"1GB\" #max_wal_size = 4GB export pg_max_wal_size = \"4GB\" #random_page_cost = 1.1 export pg_random_page_cost = \"1.1\" #effective_cache_size = 1536MB export pg_effective_cache_size = \"1536MB\" #default_statistics_target = 100 export pg_default_statistics_target = \"100\" export pg_max_worker_processes = \"8\" export pg_max_parallel_workers_per_gather = \"2\" export pg_max_parallel_workers = \"2\" sed -i 's/^max_connections/max_connections/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_connections.*\\):\\1\\nmax_connections = ${ pg_max_connections } :g\" -i ${ PGCONF } /postgresql.conf #shared_buffers = 512MB sed -i 's/^shared_buffers/#shared_buffers/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#shared_buffers.*\\):\\1\\nshared_buffers = ${ pg_shared_buffers } :g\" -i ${ PGCONF } /postgresql.conf #work_mem = 2621kB sed -i 's/^work_mem/#work_mem/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#work_mem.*\\):\\1\\nwork_mem = ${ pg_work_mem } :g\" -i ${ PGCONF } /postgresql.conf #maintenance_work_mem = 128MB sed -i 's/^maintenance_work_mem/#maintenance_work_mem/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#maintenance_work_mem.*\\):\\1\\nmaintenance_work_mem = ${ pg_maintenance_work_mem } :g\" -i ${ PGCONF } /postgresql.conf #effective_io_concurrency = 200 sed -i 's/^effective_io_concurrency/#effective_io_concurrency/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#effective_io_concurrency.*\\):\\1\\neffective_io_concurrency = ${ pg_effective_io_concurrency } :g\" -i ${ PGCONF } /postgresql.conf #wal_buffers = 16MB sed -i 's/^wal_buffers/#wal_buffers/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#wal_buffers.*\\):\\1\\nwal_buffers = ${ pg_wal_buffers } :g\" -i ${ PGCONF } /postgresql.conf #checkpoint_completion_target = 0.9 sed -i 's/^checkpoint_completion_target/#checkpoint_completion_target/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#checkpoint_completion_target.*\\):\\1\\ncheckpoint_completion_target = ${ pg_checkpoint_completion_target } :g\" -i ${ PGCONF } /postgresql.conf #min_wal_size = 1GB sed -i 's/^min_wal_size/#min_wal_size/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#min_wal_size.*\\):\\1\\nmin_wal_size = ${ pg_min_wal_size } :g\" -i ${ PGCONF } /postgresql.conf #max_wal_size = 4GB sed -i 's/^max_wal_size/#max_wal_size/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_wal_size.*\\):\\1\\nmax_wal_size = ${ pg_max_wal_size } :g\" -i ${ PGCONF } /postgresql.conf #random_page_cost = 1.1 sed -i 's/^random_page_cost/#random_page_cost/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#random_page_cost.*\\):\\1\\nrandom_page_cost = ${ pg_random_page_cost } :g\" -i ${ PGCONF } /postgresql.conf #effective_cache_size = 1536MB sed -i 's/^effective_cache_size/#effective_cache_size/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#effective_cache_size.*\\):\\1\\neffective_cache_size = ${ pg_effective_cache_size } :g\" -i ${ PGCONF } /postgresql.conf #default_statistics_target = 100 sed -i 's/^default_statistics_target/#default_statistics_target/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#default_statistics_target.*\\):\\1\\ndefault_statistics_target = ${ pg_default_statistics_target } :g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_worker_processes/#max_worker_processes/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_worker_processes.*\\):\\1\\nmax_worker_processes = ${ pg_max_worker_processes } :g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_parallel_workers_per_gather/#max_parallel_workers_per_gather/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_parallel_workers_per_gather.*\\):\\1\\nmax_parallel_workers_per_gather = ${ pg_max_parallel_workers_per_gather } :g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_parallel_workers =/#max_parallel_workers =/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_parallel_workers =.*\\):\\1\\nmax_parallel_workers = ${ pg_max_parallel_workers } :g\" -i ${ PGCONF } /postgresql.conf","title":"Instala\u00e7\u00e3o"},{"location":"instalacao/#instalacao","text":"Site oficial: Postgres","title":"Instala\u00e7\u00e3o"},{"location":"instalacao/#instalacao-via-pacotes","text":"Ubuntu Tipo Localiza\u00e7\u00e3o Instala\u00e7\u00e3o Instala\u00e7\u00e3o Con\ufb01gura\u00e7\u00e3o /etc/postgresql/VERS\u00c3O MAJORIT\u00c1RIA/main Dados /var/lib/postgresql/VERS\u00c3O MAJORIT\u00c1RIA/main Bin\u00e1rios /usr/lib/postgresql/VERS\u00c3O MAJORIT\u00c1RIA/bin","title":"Instala\u00e7\u00e3o via pacotes"},{"location":"instalacao/#pre-requisitos-para-realizar-a-instalacao","text":"Executar a atualiza\u00e7\u00e3o do SO (Opcional): apt -y update Iptables: iptables -A INPUT -p tcp --dport 5432 -j ACCEPT iptables -A INPUT -p udp --dport 5432 -j ACCEPT systemctl restart iptables Configure os hosts: vim /etc/hosts IP_SERVER_A hostname_node_a IP_SERVER_B hostname_node_b Salve o arquivo: :wq","title":"Pr\u00e9 requisitos para realizar a instala\u00e7\u00e3o"},{"location":"instalacao/#variavies","text":"# Digite a vers\u00e3o majorit\u00e1ria do PostgreSQL que deseja instalar: read -p 'Vers\u00e3o majorit\u00e1ria do PostgreSQL: ' PGMAJOR # Vari\u00e1vel de ambiente Port read -p 'Digite a Porta do PostgreSQL: ' PGPORT # Vari\u00e1vel de ambiente do Diret\u00f3rio de dados do PostgreSQL export PGCONF = \"/etc/postgresql/ ${ PGMAJOR } /main\"","title":"Vari\u00e1vies"},{"location":"instalacao/#instalacao_1","text":"sudo sh -c 'echo \"deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main\" > /etc/apt/sources.list.d/pgdg.list' wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - sudo apt-get -y update sudo apt-get -y install postgresql- ${ PGMAJOR }","title":"Instala\u00e7\u00e3o"},{"location":"instalacao/#alteracoes-no-postgresqlconf","text":"# Altera\u00e7\u00f5es no postgresql.conf via sed (Habilitar quais endere\u00e7os IP o postgres deve ouvir). # Abra o arquivo \"postgresql.conf\" que se encontra no diret\u00f3rio \"/etc/postgresql/${PGMAJOR}/main\". # vim /etc/postgresql/${PGMAJOR}/main/postgresql.conf # listen_addresses = \u2019*\u2019 sed \"s:\\(^#listen_addresses.*\\):\\1\\nlisten_addresses = '*':g\" -i ${ PGCONF } /postgresql.conf # port = sed \"s:\\(^#port.*\\):\\1\\nport = ${ PGPORT } :g\" -i ${ PGCONF } /postgresql.conf # - Where to Log - # log_destination = 'stderr' sed -i 's/^log_destination/#log_destination/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_destination.*\\):\\1\\nlog_destination = 'stderr':g\" -i ${ PGCONF } /postgresql.conf #logging_collector = on sed -i 's/^logging_collector/#logging_collector/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#logging_collector.*\\):\\1\\nlogging_collector = on:g\" -i ${ PGCONF } /postgresql.conf #log_directory = 'log' sed -i 's/^log_directory/#log_directory/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_directory.*\\):\\1\\nlog_directory = 'log':g\" -i ${ PGCONF } /postgresql.conf #log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log' sed -i 's/^log_filename/#log_filename/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_filename.*\\):\\1\\nlog_filename = 'postgresql-%Y-%m-%d_%H%M%S.log':g\" -i ${ PGCONF } /postgresql.conf #log_truncate_on_rotation = on sed -i 's/^log_truncate_on_rotation/#log_truncate_on_rotation/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_truncate_on_rotation.*\\):\\1\\nlog_truncate_on_rotation = on:g\" -i ${ PGCONF } /postgresql.conf #log_rotation_age = 1d sed -i 's/^log_rotation_age/#log_rotation_age/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_rotation_age.*\\):\\1\\nlog_rotation_age = 1d:g\" -i ${ PGCONF } /postgresql.conf #log_rotation_size = 64MB sed -i 's/^log_rotation_size/#log_rotation_size/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_rotation_size.*\\):\\1\\nlog_rotation_size = 64MB:g\" -i ${ PGCONF } /postgresql.conf # - When to Log - #log_min_messages = notice sed -i 's/^log_min_messages/#log_min_messages/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_min_messages.*\\):\\1\\nlog_min_messages = notice:g\" -i ${ PGCONF } /postgresql.conf #log_min_error_statement = warning sed -i 's/^log_min_error_statement/#log_min_error_statement/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_min_error_statement.*\\):\\1\\nlog_min_error_statement = warning:g\" -i ${ PGCONF } /postgresql.conf #log_min_duration_statement = 4000 sed -i 's/^log_min_duration_statement/#log_min_duration_statement/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_min_duration_statement.*\\):\\1\\nlog_min_duration_statement = 4000:g\" -i ${ PGCONF } /postgresql.conf # - What to Log - #log_checkpoints = on sed -i 's/^log_checkpoints/#log_checkpoints/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_checkpoints.*\\):\\1\\nlog_checkpoints = on:g\" -i ${ PGCONF } /postgresql.conf #log_connections = on sed -i 's/^log_connections/#log_connections/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_connections.*\\):\\1\\nlog_connections = on:g\" -i ${ PGCONF } /postgresql.conf #log_disconnections = on sed -i 's/^log_disconnections/#log_disconnections/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_disconnections.*\\):\\1\\nlog_disconnections = on:g\" -i ${ PGCONF } /postgresql.conf #log_duration = off sed -i 's/^log_duration/#log_duration/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_duration.*\\):\\1\\nlog_duration = off:g\" -i ${ PGCONF } /postgresql.conf #log_error_verbosity = default sed -i 's/^log_error_verbosity/#log_error_verbosity/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_error_verbosity.*\\):\\1\\nlog_error_verbosity = default:g\" -i ${ PGCONF } /postgresql.conf #log_hostname = off sed -i 's/^log_hostname/#log_hostname/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_hostname.*\\):\\1\\nlog_hostname = off:g\" -i ${ PGCONF } /postgresql.conf #log_line_prefix = '%t [%p]: [%l-1] db=%d,user=%u,app=%a,client=%h ' sed -i 's/^log_line_prefix/#log_line_prefix/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_line_prefix.*\\):\\1\\nlog_line_prefix = \\'%t [%p]\\:\\ [%l-1] db=%d,user=%u,app=%a,client=%h \\':g\" -i ${ PGCONF } /postgresql.conf #log_lock_waits = on sed -i 's/^log_lock_waits/#log_lock_waits/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_lock_waits.*\\):\\1\\nlog_lock_waits = on:g\" -i ${ PGCONF } /postgresql.conf #log_statement = 'ddl' sed -i \"s/^log_statement = 'none'/#log_statement = 'none'/\" ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_statement =.*\\):\\1\\nlog_statement = 'ddl':g\" -i ${ PGCONF } /postgresql.conf #log_temp_files = 0 sed -i 's/^log_temp_files/#log_temp_files/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#log_temp_files.*\\):\\1\\nlog_temp_files = 0:g\" -i ${ PGCONF } /postgresql.conf #password_encryption = scram-sha-256 sed \"s:\\(^#password_encryption.*\\):\\1\\npassword_encryption = scram-sha-256:g\" -i ${ PGCONF } /postgresql.conf #client_min_messages = log sed -i 's/^client_min_messages/#client_min_messages/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#client_min_messages.*\\):\\1\\nclient_min_messages = log:g\" -i ${ PGCONF } /postgresql.conf #authentication_timeout = 1min sed \"s:\\(^#authentication_timeout.*\\):\\1\\nauthentication_timeout = 1min:g\" -i ${ PGCONF } /postgresql.conf #client_connection_check_interval = 20s sed \"s:\\(^#client_connection_check_interval.*\\):\\1\\nclient_connection_check_interval = 20s:g\" -i ${ PGCONF } /postgresql.conf #superuser_reserved_connections = 3 sed \"s:\\(^#superuser_reserved_connections.*\\):\\1\\nsuperuser_reserved_connections = 3:g\" -i ${ PGCONF } /postgresql.conf","title":"Altera\u00e7\u00f5es no postgresql.conf"},{"location":"instalacao/#startar-e-verificar-status-postgresql","text":"# habilitar postgresql systemctl enable --now postgresql systemctl start postgresql #systemctl start postgresql@${PGMAJOR}-main systemctl status postgresql #ou # Exibindo a vers\u00e3o do PostgreSQL #pg_lsclusters #service postgresql status #systemctl status postgresql@${PGMAJOR}-main #systemctl stop postgresql@14-main Dicas de configura\u00e7\u00e3o lsmem # Memory lscpu # CPU leopard pgconfig #================================ E X E M P L O ================================ #max_connections = 100 export pg_max_connections = \"100\" #shared_buffers = 512MB export pg_shared_buffers = \"512MB\" #work_mem = 2621kB export pg_work_mem = \"2621kB\" #maintenance_work_mem = 128MB export pg_maintenance_work_mem = \"128MB\" #effective_io_concurrency = 200 export pg_effective_io_concurrency = \"200\" #wal_buffers = 16MB export pg_wal_buffers = \"16MB\" #checkpoint_completion_target = 0.9 export pg_checkpoint_completion_target = \"0.9\" #min_wal_size = 1GB export pg_min_wal_size = \"1GB\" #max_wal_size = 4GB export pg_max_wal_size = \"4GB\" #random_page_cost = 1.1 export pg_random_page_cost = \"1.1\" #effective_cache_size = 1536MB export pg_effective_cache_size = \"1536MB\" #default_statistics_target = 100 export pg_default_statistics_target = \"100\" export pg_max_worker_processes = \"8\" export pg_max_parallel_workers_per_gather = \"2\" export pg_max_parallel_workers = \"2\" sed -i 's/^max_connections/max_connections/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_connections.*\\):\\1\\nmax_connections = ${ pg_max_connections } :g\" -i ${ PGCONF } /postgresql.conf #shared_buffers = 512MB sed -i 's/^shared_buffers/#shared_buffers/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#shared_buffers.*\\):\\1\\nshared_buffers = ${ pg_shared_buffers } :g\" -i ${ PGCONF } /postgresql.conf #work_mem = 2621kB sed -i 's/^work_mem/#work_mem/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#work_mem.*\\):\\1\\nwork_mem = ${ pg_work_mem } :g\" -i ${ PGCONF } /postgresql.conf #maintenance_work_mem = 128MB sed -i 's/^maintenance_work_mem/#maintenance_work_mem/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#maintenance_work_mem.*\\):\\1\\nmaintenance_work_mem = ${ pg_maintenance_work_mem } :g\" -i ${ PGCONF } /postgresql.conf #effective_io_concurrency = 200 sed -i 's/^effective_io_concurrency/#effective_io_concurrency/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#effective_io_concurrency.*\\):\\1\\neffective_io_concurrency = ${ pg_effective_io_concurrency } :g\" -i ${ PGCONF } /postgresql.conf #wal_buffers = 16MB sed -i 's/^wal_buffers/#wal_buffers/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#wal_buffers.*\\):\\1\\nwal_buffers = ${ pg_wal_buffers } :g\" -i ${ PGCONF } /postgresql.conf #checkpoint_completion_target = 0.9 sed -i 's/^checkpoint_completion_target/#checkpoint_completion_target/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#checkpoint_completion_target.*\\):\\1\\ncheckpoint_completion_target = ${ pg_checkpoint_completion_target } :g\" -i ${ PGCONF } /postgresql.conf #min_wal_size = 1GB sed -i 's/^min_wal_size/#min_wal_size/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#min_wal_size.*\\):\\1\\nmin_wal_size = ${ pg_min_wal_size } :g\" -i ${ PGCONF } /postgresql.conf #max_wal_size = 4GB sed -i 's/^max_wal_size/#max_wal_size/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_wal_size.*\\):\\1\\nmax_wal_size = ${ pg_max_wal_size } :g\" -i ${ PGCONF } /postgresql.conf #random_page_cost = 1.1 sed -i 's/^random_page_cost/#random_page_cost/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#random_page_cost.*\\):\\1\\nrandom_page_cost = ${ pg_random_page_cost } :g\" -i ${ PGCONF } /postgresql.conf #effective_cache_size = 1536MB sed -i 's/^effective_cache_size/#effective_cache_size/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#effective_cache_size.*\\):\\1\\neffective_cache_size = ${ pg_effective_cache_size } :g\" -i ${ PGCONF } /postgresql.conf #default_statistics_target = 100 sed -i 's/^default_statistics_target/#default_statistics_target/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#default_statistics_target.*\\):\\1\\ndefault_statistics_target = ${ pg_default_statistics_target } :g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_worker_processes/#max_worker_processes/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_worker_processes.*\\):\\1\\nmax_worker_processes = ${ pg_max_worker_processes } :g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_parallel_workers_per_gather/#max_parallel_workers_per_gather/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_parallel_workers_per_gather.*\\):\\1\\nmax_parallel_workers_per_gather = ${ pg_max_parallel_workers_per_gather } :g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_parallel_workers =/#max_parallel_workers =/' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_parallel_workers =.*\\):\\1\\nmax_parallel_workers = ${ pg_max_parallel_workers } :g\" -i ${ PGCONF } /postgresql.conf","title":"Startar e Verificar status PostgreSQL"},{"location":"releases/","text":"Releases notes 15.x 15.0 . 2022-10-13 - https://www.postgresql.org/docs/release/15.0/ Mudan\u00e7as wal_compression \u21d2 Op\u00e7\u00e3o para compress\u00e3o dos WALs; recovery_prefetch \u21d2 Foi introduzida a paraleliza\u00e7\u00e3o para SELECT DISTINCT e melhorias no desempenho de fun\u00e7\u00f5es que usam row_number() , rank() e count() . Views com security_invoker \u21d2 Se estiver como TRUE o usu\u00e1rio v\u00ea os dados conforme suas pr\u00f3prias permiss\u00f5es, inclusive RLS e Vis\u00f5es Materializadas; Novas fun\u00e7\u00f5es de REGEX \u21d2 regexp_count(), regexp_instr(), regexp_like(), regexp_substr(); create unique index ... nulls not distinct \u21d2 S\u00f3 aceita um nulo como unique index, diferente do padr\u00e3o atual; Log \u21d2 op\u00e7\u00e3o jsonlog (exporta o log em json); pg_get_wal_record_infor e pg_get_wal_stats \u21d2 pg_walinspect; Schema PUBLIC precisam ser concedidos permiss\u00e3o para uso; MERGE \u21d2 merge into t1 using t2 on (t1.id = t2.id) when matched and t1.column <> t2.column then update valor = t2.valor; archive_library e basic_archive.archive_directory = '/path/to/archive/directory \u21d2 Substituir o archive_command; Replica\u00e7\u00e3o l\u00f3gica \u21d2 -- Filtro de colunas CREATE PUBLICATION teste FOR TABLE tbx ( column1 , column2 ); -- Filtro de linhas CREATE PUBLICATION teste FOR TABLE tbx WHERE ( column1 = xxxxx ); -- Publicar todas as tabelas de um ou mais schemas CREATE PUBLICATION teste FOR TABLES IN SCHEMA sch1 , sch2 ; -- Subscri\u00e7\u00f5es podems ser desligas automaticamente em caso de erros CREATE SUBSCRIPTION sb_teste CONECTION 'xxx' PUBLICATION teste WITH ( disable_on_error = true ); -- Permite pular transa\u00e7\u00f5es em conflito numa r\u00e9plica l\u00f3gica ALTER SUBSCRIPTION mysub ENABLE ; 14.x 14.0 . 2021-09-30 - https://www.postgresql.org/docs/release/14.0/ 14.1 . 2021-11-11 - https://www.postgresql.org/docs/release/14.1/ Mudan\u00e7as pg_read_all_data e pg_write_all_data \u21d2 Permite conceder permiss\u00f5es de escrita e leitura para v\u00e1rias roles ao mesmo tempo; Remover arquivos tempor\u00e1rios ap\u00f3s uma queda do servidor; client_connection_check_interval \u21d2 Permite que consultas longas sejam canceladas se o cliente desconectar; idle_session_timeout \u21d2 Permite criar configura\u00e7\u00e3o para fechar sess\u00f5es em idle; ALTER INDEX ALTER TABLE ALTER COLUMN REINDEX TABLESPACE CREATE OR REPLACE TRIGGER \u21d2 Antes n\u00e3o tina o REPLACE; GROUP BY DISTINCT ; Palavras chaves utilizadas como label de coluna sem \u201cAS\u201d; Alias de tabela no USING do JOIN ; TRUNCATE foreign table Mostra o query id na pg_stat_activity , EXPLAIN VERBOSE, csvlog, e opcionalmente na log_line_prefix ; Reporta o tempo de E/S do auto-vacuum e auto-analyze se o track_io_timing estiver habilitado; Novas views de cat\u00e1logo: pg_stat_progress_copy , pg_stat_wal , pg_stat_replication_slots , pg_backend_memory_contexts (Quanto de mem\u00f3ria); Vacuum com maior velocidade em bases com muitas tabelas; Permite a replica\u00e7\u00e3o l\u00f3gica fazer o stream de transa\u00e7\u00f5es longas em progresso para os subscribes, tira o \u201cpeso\u201d do master; Permite a carga inicial de m\u00faltiplas tabelas ao mesmo tempo, paralelo e n\u00e3o mais sequencial; REFRESH MATERIALIZED VIEW \u21d2 Paralelismo; pg_dump \u21d2 Pode fazer dump de algumas extens\u00f5es espec\u00edficas usando a op\u00e7\u00e3o \u2014extension ; pg_surgery \u21d2 Fornece ferramentas para executar a\u00e7\u00f5es corretivas em dados potencialmente corrompidos; password_encryption \u21d2 Default scram-sha-256 ; FDW \u21d2 Suporte para bulk inserts; Adicionadas as fun\u00e7\u00f5es: postgres_fdw_get_connections() , postgres_fdw_disconnect() , postgres_fdw_disconnect_all() ; Incompatibilidades Utilit\u00e1rio pg_standby foi removido; pg_hba.conf \u21d2 Revisar clientcert; 13.x 13.0 . 2020-09-24 - https://www.postgresql.org/docs/release/13.0/ 13.5 . 2021-11-11 - https://www.postgresql.org/docs/release/13.5/ Mudan\u00e7as Particionamento l\u00f3gico; index \u21d2 Duplicates in B-tree, permite \u00edndices menores e perform\u00e1ticos em colunas com baixa cardinalidade (mesmo depois do pg_upgrade precisa realizar o reindex ); enable_incremental_sort \u21d2 Incremental Sorting, reaproveitando o sort internamente; Autovaccum \u21d2 Agora tamb\u00e9m para inserts ( autovacuum_vacuum_insert_threshold e autovacuum_vacuum_insert_scale_fator ; log_statement_sample_rate \u21d2 Agora permite setar uma fra\u00e7\u00e3o de coleta dos logs com dura\u00e7\u00e3o maior que log_min_duration_sample ; pg_stat_activity \u21d2 Adicionado pid dos processos paralelos (de quem ele \u00e9 pai ou \u00e9 filho); pg_stat_progress_basebackup \u21d2 Medir o tempo do processo; ssl_min_protocol_version \u21d2 TLS version, conex\u00f5es criptografadas de 1.0 para 1.2; primary_conninfo e primary_slot_name \u21d2 Streaming replication e recovery anteriormente era necess\u00e1rio reiniciar o servidor para alterar, agora s\u00f3 com reload; wal_receiver_create_temp_slot \u21d2 Se tiver TRUE vai criar um slot tempor\u00e1rio, o que evitar\u00e1 que perca o secund\u00e1rio, caso haja muita escrita no prim\u00e1rio. max_slot_wal_keep_size \u21d2 Vai permitir determinar o tamanho dos slots de replica\u00e7\u00e3o, caso um secund\u00e1rio fique down; Vacuum \u21d2 Processar os \u00edndices em paralelo (PARALLEL); alter view \u21d2 Renomear colunas; DROP DATABASE \u21d2 For\u00e7ar mesmo com conex\u00f5es abertas; pg_basebackup \u21d2 Estimar o tamanho total do backup; pg_verifybackup \u21d2 Verificar integridade do backup; pg_dump \u21d2 \u2014include-foreign-data, permite juntar dados externos. Incompatibilidades Renomeado wait_events \u21d2 Querys de monitoramento; Renomeado wal_keep_segments to wal_keep_size \u21d2 Antes era o n\u00famero de arquivos, agora \u00e9 o tamanho;","title":"Releases"},{"location":"releases/#releases-notes","text":"","title":"Releases notes"},{"location":"releases/#15x","text":"15.0 . 2022-10-13 - https://www.postgresql.org/docs/release/15.0/","title":"15.x"},{"location":"releases/#mudancas","text":"wal_compression \u21d2 Op\u00e7\u00e3o para compress\u00e3o dos WALs; recovery_prefetch \u21d2 Foi introduzida a paraleliza\u00e7\u00e3o para SELECT DISTINCT e melhorias no desempenho de fun\u00e7\u00f5es que usam row_number() , rank() e count() . Views com security_invoker \u21d2 Se estiver como TRUE o usu\u00e1rio v\u00ea os dados conforme suas pr\u00f3prias permiss\u00f5es, inclusive RLS e Vis\u00f5es Materializadas; Novas fun\u00e7\u00f5es de REGEX \u21d2 regexp_count(), regexp_instr(), regexp_like(), regexp_substr(); create unique index ... nulls not distinct \u21d2 S\u00f3 aceita um nulo como unique index, diferente do padr\u00e3o atual; Log \u21d2 op\u00e7\u00e3o jsonlog (exporta o log em json); pg_get_wal_record_infor e pg_get_wal_stats \u21d2 pg_walinspect; Schema PUBLIC precisam ser concedidos permiss\u00e3o para uso; MERGE \u21d2 merge into t1 using t2 on (t1.id = t2.id) when matched and t1.column <> t2.column then update valor = t2.valor; archive_library e basic_archive.archive_directory = '/path/to/archive/directory \u21d2 Substituir o archive_command; Replica\u00e7\u00e3o l\u00f3gica \u21d2 -- Filtro de colunas CREATE PUBLICATION teste FOR TABLE tbx ( column1 , column2 ); -- Filtro de linhas CREATE PUBLICATION teste FOR TABLE tbx WHERE ( column1 = xxxxx ); -- Publicar todas as tabelas de um ou mais schemas CREATE PUBLICATION teste FOR TABLES IN SCHEMA sch1 , sch2 ; -- Subscri\u00e7\u00f5es podems ser desligas automaticamente em caso de erros CREATE SUBSCRIPTION sb_teste CONECTION 'xxx' PUBLICATION teste WITH ( disable_on_error = true ); -- Permite pular transa\u00e7\u00f5es em conflito numa r\u00e9plica l\u00f3gica ALTER SUBSCRIPTION mysub ENABLE ;","title":"Mudan\u00e7as"},{"location":"releases/#14x","text":"14.0 . 2021-09-30 - https://www.postgresql.org/docs/release/14.0/ 14.1 . 2021-11-11 - https://www.postgresql.org/docs/release/14.1/","title":"14.x"},{"location":"releases/#mudancas_1","text":"pg_read_all_data e pg_write_all_data \u21d2 Permite conceder permiss\u00f5es de escrita e leitura para v\u00e1rias roles ao mesmo tempo; Remover arquivos tempor\u00e1rios ap\u00f3s uma queda do servidor; client_connection_check_interval \u21d2 Permite que consultas longas sejam canceladas se o cliente desconectar; idle_session_timeout \u21d2 Permite criar configura\u00e7\u00e3o para fechar sess\u00f5es em idle; ALTER INDEX ALTER TABLE ALTER COLUMN REINDEX TABLESPACE CREATE OR REPLACE TRIGGER \u21d2 Antes n\u00e3o tina o REPLACE; GROUP BY DISTINCT ; Palavras chaves utilizadas como label de coluna sem \u201cAS\u201d; Alias de tabela no USING do JOIN ; TRUNCATE foreign table Mostra o query id na pg_stat_activity , EXPLAIN VERBOSE, csvlog, e opcionalmente na log_line_prefix ; Reporta o tempo de E/S do auto-vacuum e auto-analyze se o track_io_timing estiver habilitado; Novas views de cat\u00e1logo: pg_stat_progress_copy , pg_stat_wal , pg_stat_replication_slots , pg_backend_memory_contexts (Quanto de mem\u00f3ria); Vacuum com maior velocidade em bases com muitas tabelas; Permite a replica\u00e7\u00e3o l\u00f3gica fazer o stream de transa\u00e7\u00f5es longas em progresso para os subscribes, tira o \u201cpeso\u201d do master; Permite a carga inicial de m\u00faltiplas tabelas ao mesmo tempo, paralelo e n\u00e3o mais sequencial; REFRESH MATERIALIZED VIEW \u21d2 Paralelismo; pg_dump \u21d2 Pode fazer dump de algumas extens\u00f5es espec\u00edficas usando a op\u00e7\u00e3o \u2014extension ; pg_surgery \u21d2 Fornece ferramentas para executar a\u00e7\u00f5es corretivas em dados potencialmente corrompidos; password_encryption \u21d2 Default scram-sha-256 ; FDW \u21d2 Suporte para bulk inserts; Adicionadas as fun\u00e7\u00f5es: postgres_fdw_get_connections() , postgres_fdw_disconnect() , postgres_fdw_disconnect_all() ;","title":"Mudan\u00e7as"},{"location":"releases/#incompatibilidades","text":"Utilit\u00e1rio pg_standby foi removido; pg_hba.conf \u21d2 Revisar clientcert;","title":"Incompatibilidades"},{"location":"releases/#13x","text":"13.0 . 2020-09-24 - https://www.postgresql.org/docs/release/13.0/ 13.5 . 2021-11-11 - https://www.postgresql.org/docs/release/13.5/","title":"13.x"},{"location":"releases/#mudancas_2","text":"Particionamento l\u00f3gico; index \u21d2 Duplicates in B-tree, permite \u00edndices menores e perform\u00e1ticos em colunas com baixa cardinalidade (mesmo depois do pg_upgrade precisa realizar o reindex ); enable_incremental_sort \u21d2 Incremental Sorting, reaproveitando o sort internamente; Autovaccum \u21d2 Agora tamb\u00e9m para inserts ( autovacuum_vacuum_insert_threshold e autovacuum_vacuum_insert_scale_fator ; log_statement_sample_rate \u21d2 Agora permite setar uma fra\u00e7\u00e3o de coleta dos logs com dura\u00e7\u00e3o maior que log_min_duration_sample ; pg_stat_activity \u21d2 Adicionado pid dos processos paralelos (de quem ele \u00e9 pai ou \u00e9 filho); pg_stat_progress_basebackup \u21d2 Medir o tempo do processo; ssl_min_protocol_version \u21d2 TLS version, conex\u00f5es criptografadas de 1.0 para 1.2; primary_conninfo e primary_slot_name \u21d2 Streaming replication e recovery anteriormente era necess\u00e1rio reiniciar o servidor para alterar, agora s\u00f3 com reload; wal_receiver_create_temp_slot \u21d2 Se tiver TRUE vai criar um slot tempor\u00e1rio, o que evitar\u00e1 que perca o secund\u00e1rio, caso haja muita escrita no prim\u00e1rio. max_slot_wal_keep_size \u21d2 Vai permitir determinar o tamanho dos slots de replica\u00e7\u00e3o, caso um secund\u00e1rio fique down; Vacuum \u21d2 Processar os \u00edndices em paralelo (PARALLEL); alter view \u21d2 Renomear colunas; DROP DATABASE \u21d2 For\u00e7ar mesmo com conex\u00f5es abertas; pg_basebackup \u21d2 Estimar o tamanho total do backup; pg_verifybackup \u21d2 Verificar integridade do backup; pg_dump \u21d2 \u2014include-foreign-data, permite juntar dados externos.","title":"Mudan\u00e7as"},{"location":"releases/#incompatibilidades_1","text":"Renomeado wait_events \u21d2 Querys de monitoramento; Renomeado wal_keep_segments to wal_keep_size \u21d2 Antes era o n\u00famero de arquivos, agora \u00e9 o tamanho;","title":"Incompatibilidades"},{"location":"replicacao_fisica/","text":"Replica\u00e7\u00e3o F\u00edsica Site oficial: Postgres Configura\u00e7\u00e3o MASTER Ap\u00f3s realizar a instala\u00e7\u00e3o e configura\u00e7\u00e3o do PostgreSQL 14 nos servidores Prim\u00e1rio e Secund\u00e1rio, realizar os procedimentos a seguir para ativar a replica\u00e7\u00e3o. Criar o usu\u00e1rio de replica\u00e7\u00e3o Utilize o superusu\u00e1rio. sudo -i Conecte com o usu\u00e1rio postgres. su - postgres Conecte a base de dados. psql Crie o usu\u00e1rio. CREATE USER rep REPLICATION LOGIN CONNECTION LIMIT 3 ENCRYPTED PASSWORD 'PGrep##76##54' ; \\ q Criar o diret\u00f3rio de arquivamento Com o superusu\u00e1rio root, acesse o diret\u00f3rio raiz. cd / Crie a seguinte estrutura de pastas. mkdir -p /opt/pgsql/archives Modifique o propriet\u00e1rio das pastas criadas. chown postgres:postgres -R /opt/pgsql Configurar par\u00e2metros postgresql.conf # Digite a vers\u00e3o majorit\u00e1ria do PostgreSQL que deseja instalar: read -p 'Vers\u00e3o majorit\u00e1ria do PostgreSQL: ' PGMAJOR # Vari\u00e1vel de ambiente do Diret\u00f3rio de dados do PostgreSQL export PGCONF = \"/etc/postgresql/ ${ PGMAJOR } /main\" sed -i 's/^wal_level = /#wal_level = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#wal_level.*\\):\\1\\nwal_level = replica:g\" -i ${ PGCONF } /postgresql.conf sed \"s:\\(^#wal_log_hints.*\\):\\1\\nwal_log_hints = on:g\" -i ${ PGCONF } /postgresql.conf sed \"s:\\(^#archive_mode.*\\):\\1\\narchive_mode = on:g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^archive_command = /#archive_command = /' ${ PGCONF } /postgresql.conf # test ! -f /opt/pgsql/archives/%f && sed \"s:\\(^#archive_command = .*\\):\\1\\narchive_command = 'cp %p /opt/pgsql/archives/%f':g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_wal_senders = /#max_wal_senders = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_wal_senders.*\\):\\1\\nmax_wal_senders = 10:g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^wal_keep_size = /#wal_keep_size = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#wal_keep_size.*\\):\\1\\nwal_keep_size = 20:g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_slot_wal_keep_size = /#max_slot_wal_keep_size = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_slot_wal_keep_size.*\\):\\1\\nmax_slot_wal_keep_size = -1:g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^hot_standby = /#hot_standby = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#hot_standby =.*\\):\\1\\nhot_standby = on:g\" -i ${ PGCONF } /postgresql.conf Configurar par\u00e2metros pg_hba.conf # Digite os IPs dos n\u00f3s: read -p 'Digite os IPs dos n\u00f3s (separados por um espa\u00e7o): ' IP cat << EOF >> ${PGCONF}/pg_hba.conf # REP ======================================================================== # repmgr database EOF # all database for i in ${ IP } do echo \"host all rep ${ i } /32 scram-sha-256\" >> \\ ${ PGCONF } /pg_hba.conf done # Pula uma linha e adiciona um cabe\u00e7alho referente \u00e0 replica\u00e7\u00e3o: cat << EOF >> ${PGCONF}/pg_hba.conf # Replication EOF # Para cada IP adicionar uma linha referente \u00e0 replica\u00e7\u00e3o: for i in ${ IP } do echo \"host replication rep ${ i } /32 scram-sha-256\" >> \\ ${ PGCONF } /pg_hba.conf done # Adiciona linha de encerramento: cat << EOF >> ${PGCONF}/pg_hba.conf # ============================================================================= EOF Reload. systemctl reload postgresql STANDBY Pare o servi\u00e7o do PostgreSQL systemctl stop postgresql Remova todo o conte\u00fado do diret\u00f3rio de dados rm -rf /var/lib/postgresql/14/main/* Crie a seguinte estrutura de pastas Crie a seguinte estrutura de pastas. mkdir -p /opt/pgsql/archives Modifique o propriet\u00e1rio das pastas criadas. chown postgres:postgres -R /opt/pgsql Conecte com o usu\u00e1rio postgres su - postgres Realize o backup a partir do servidor prim\u00e1rio pg_basebackup --format = plain --progress -D /var/lib/postgresql/14/main -h 172 .19.0.2 -p 5432 -U rep -R Edite o arquivo \"postgresql.auto.conf\" vim /var/lib//postgresql/14/main/postgresql.auto.conf O arquivo dever\u00e1 conter os seguintes par\u00e2metros listen_addresses = '*' primary_conninfo = 'user=rep password=PGrep##76##54 host=IP_DO_NOVO_PRIMARIO port=5432 sslmode=prefer sslcompression=0 gssencmode=prefer krbsrvname=postgres target_session_attrs=any' restore_command = 'scp postgres@IP_DO_NOVO_PRIMARIO:/opt/pgsql/archives/%f %p' Finalizando configura\u00e7\u00f5es Copie os arquivos de configura\u00e7\u00e3o. scp postgres@172.19.0.2:/etc/postgresql/14/main/pg_hba.conf /etc/postgresql/14/main/ scp postgres@172.19.0.2:/etc/postgresql/14/main/postgresql.conf /etc/postgresql/14/main/ Volte ao usu\u00e1rio root. exit Inicie o servi\u00e7o. systemctl start postgresql Verifique o status. select * from pg_stat_wal_receiver ; Troca de chaves SSH Autorized # Como deve ser feito? (comece pelo DB 01) # Com sudo ou como root, mudar a senha do usu\u00e1rio postgres para senha passwd postgres su postgres ssh-keygen # /var/lib/postgresql/.ssh # Fa\u00e7a login no DB 02 com seu us\u00e1rio e mude a senha do usu\u00e1rio postgres para senha; # em seguida volte para o DB 01 e logue como usu\u00e1rio postgres novamente. # A partir do DB 01, aplique o comando ssh-copy-id IP Destino # a senha vai ser pedida, fa\u00e7a o login normal # Ao sair do DB 02 e tentar logar como postgres novamente no DB 02, n\u00e3o era pra ser pedida a senha. #Caso pe\u00e7a, \u00e9 problema de SELINUX. Para resolver, siga os passos abaixo. # Procedimento do SELINUX sudo apt install policycoreutils selinux-basics selinux-utils -y sudo selinux-activate # No SLAVE usu\u00e1rio root # Fa\u00e7a o procedimento de troca de chaves ssh com o seu pr\u00f3prio usu\u00e1rio sudo semanage fcontext -a -t ssh_home_t '/var/lib/postgresql/.ssh(/.*)?' sudo restorecon -vvRF /var/lib/postgresql/.ssh/","title":"Replica\u00e7\u00e3o f\u00edsica"},{"location":"replicacao_fisica/#replicacao-fisica","text":"Site oficial: Postgres","title":"Replica\u00e7\u00e3o F\u00edsica"},{"location":"replicacao_fisica/#configuracao","text":"","title":"Configura\u00e7\u00e3o"},{"location":"replicacao_fisica/#master","text":"Ap\u00f3s realizar a instala\u00e7\u00e3o e configura\u00e7\u00e3o do PostgreSQL 14 nos servidores Prim\u00e1rio e Secund\u00e1rio, realizar os procedimentos a seguir para ativar a replica\u00e7\u00e3o.","title":"MASTER"},{"location":"replicacao_fisica/#criar-o-usuario-de-replicacao","text":"Utilize o superusu\u00e1rio. sudo -i Conecte com o usu\u00e1rio postgres. su - postgres Conecte a base de dados. psql Crie o usu\u00e1rio. CREATE USER rep REPLICATION LOGIN CONNECTION LIMIT 3 ENCRYPTED PASSWORD 'PGrep##76##54' ; \\ q","title":"Criar o usu\u00e1rio de replica\u00e7\u00e3o"},{"location":"replicacao_fisica/#criar-o-diretorio-de-arquivamento","text":"Com o superusu\u00e1rio root, acesse o diret\u00f3rio raiz. cd / Crie a seguinte estrutura de pastas. mkdir -p /opt/pgsql/archives Modifique o propriet\u00e1rio das pastas criadas. chown postgres:postgres -R /opt/pgsql","title":"Criar o diret\u00f3rio de arquivamento"},{"location":"replicacao_fisica/#configurar-parametros-postgresqlconf","text":"# Digite a vers\u00e3o majorit\u00e1ria do PostgreSQL que deseja instalar: read -p 'Vers\u00e3o majorit\u00e1ria do PostgreSQL: ' PGMAJOR # Vari\u00e1vel de ambiente do Diret\u00f3rio de dados do PostgreSQL export PGCONF = \"/etc/postgresql/ ${ PGMAJOR } /main\" sed -i 's/^wal_level = /#wal_level = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#wal_level.*\\):\\1\\nwal_level = replica:g\" -i ${ PGCONF } /postgresql.conf sed \"s:\\(^#wal_log_hints.*\\):\\1\\nwal_log_hints = on:g\" -i ${ PGCONF } /postgresql.conf sed \"s:\\(^#archive_mode.*\\):\\1\\narchive_mode = on:g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^archive_command = /#archive_command = /' ${ PGCONF } /postgresql.conf # test ! -f /opt/pgsql/archives/%f && sed \"s:\\(^#archive_command = .*\\):\\1\\narchive_command = 'cp %p /opt/pgsql/archives/%f':g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_wal_senders = /#max_wal_senders = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_wal_senders.*\\):\\1\\nmax_wal_senders = 10:g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^wal_keep_size = /#wal_keep_size = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#wal_keep_size.*\\):\\1\\nwal_keep_size = 20:g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^max_slot_wal_keep_size = /#max_slot_wal_keep_size = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#max_slot_wal_keep_size.*\\):\\1\\nmax_slot_wal_keep_size = -1:g\" -i ${ PGCONF } /postgresql.conf sed -i 's/^hot_standby = /#hot_standby = /' ${ PGCONF } /postgresql.conf sed \"s:\\(^#hot_standby =.*\\):\\1\\nhot_standby = on:g\" -i ${ PGCONF } /postgresql.conf","title":"Configurar par\u00e2metros postgresql.conf"},{"location":"replicacao_fisica/#configurar-parametros-pg_hbaconf","text":"# Digite os IPs dos n\u00f3s: read -p 'Digite os IPs dos n\u00f3s (separados por um espa\u00e7o): ' IP cat << EOF >> ${PGCONF}/pg_hba.conf # REP ======================================================================== # repmgr database EOF # all database for i in ${ IP } do echo \"host all rep ${ i } /32 scram-sha-256\" >> \\ ${ PGCONF } /pg_hba.conf done # Pula uma linha e adiciona um cabe\u00e7alho referente \u00e0 replica\u00e7\u00e3o: cat << EOF >> ${PGCONF}/pg_hba.conf # Replication EOF # Para cada IP adicionar uma linha referente \u00e0 replica\u00e7\u00e3o: for i in ${ IP } do echo \"host replication rep ${ i } /32 scram-sha-256\" >> \\ ${ PGCONF } /pg_hba.conf done # Adiciona linha de encerramento: cat << EOF >> ${PGCONF}/pg_hba.conf # ============================================================================= EOF Reload. systemctl reload postgresql","title":"Configurar par\u00e2metros pg_hba.conf"},{"location":"replicacao_fisica/#standby","text":"","title":"STANDBY"},{"location":"replicacao_fisica/#pare-o-servico-do-postgresql","text":"systemctl stop postgresql","title":"Pare o servi\u00e7o do PostgreSQL"},{"location":"replicacao_fisica/#remova-todo-o-conteudo-do-diretorio-de-dados","text":"rm -rf /var/lib/postgresql/14/main/*","title":"Remova todo o conte\u00fado do diret\u00f3rio de dados"},{"location":"replicacao_fisica/#crie-a-seguinte-estrutura-de-pastas","text":"Crie a seguinte estrutura de pastas. mkdir -p /opt/pgsql/archives Modifique o propriet\u00e1rio das pastas criadas. chown postgres:postgres -R /opt/pgsql","title":"Crie a seguinte estrutura de pastas"},{"location":"replicacao_fisica/#conecte-com-o-usuario-postgres","text":"su - postgres","title":"Conecte com o usu\u00e1rio postgres"},{"location":"replicacao_fisica/#realize-o-backup-a-partir-do-servidor-primario","text":"pg_basebackup --format = plain --progress -D /var/lib/postgresql/14/main -h 172 .19.0.2 -p 5432 -U rep -R","title":"Realize o backup a partir do servidor prim\u00e1rio"},{"location":"replicacao_fisica/#edite-o-arquivo-postgresqlautoconf","text":"vim /var/lib//postgresql/14/main/postgresql.auto.conf O arquivo dever\u00e1 conter os seguintes par\u00e2metros listen_addresses = '*' primary_conninfo = 'user=rep password=PGrep##76##54 host=IP_DO_NOVO_PRIMARIO port=5432 sslmode=prefer sslcompression=0 gssencmode=prefer krbsrvname=postgres target_session_attrs=any' restore_command = 'scp postgres@IP_DO_NOVO_PRIMARIO:/opt/pgsql/archives/%f %p'","title":"Edite o arquivo \"postgresql.auto.conf\""},{"location":"replicacao_fisica/#finalizando-configuracoes","text":"Copie os arquivos de configura\u00e7\u00e3o. scp postgres@172.19.0.2:/etc/postgresql/14/main/pg_hba.conf /etc/postgresql/14/main/ scp postgres@172.19.0.2:/etc/postgresql/14/main/postgresql.conf /etc/postgresql/14/main/ Volte ao usu\u00e1rio root. exit Inicie o servi\u00e7o. systemctl start postgresql Verifique o status. select * from pg_stat_wal_receiver ;","title":"Finalizando configura\u00e7\u00f5es"},{"location":"replicacao_fisica/#troca-de-chaves","text":"SSH Autorized # Como deve ser feito? (comece pelo DB 01) # Com sudo ou como root, mudar a senha do usu\u00e1rio postgres para senha passwd postgres su postgres ssh-keygen # /var/lib/postgresql/.ssh # Fa\u00e7a login no DB 02 com seu us\u00e1rio e mude a senha do usu\u00e1rio postgres para senha; # em seguida volte para o DB 01 e logue como usu\u00e1rio postgres novamente. # A partir do DB 01, aplique o comando ssh-copy-id IP Destino # a senha vai ser pedida, fa\u00e7a o login normal # Ao sair do DB 02 e tentar logar como postgres novamente no DB 02, n\u00e3o era pra ser pedida a senha. #Caso pe\u00e7a, \u00e9 problema de SELINUX. Para resolver, siga os passos abaixo. # Procedimento do SELINUX sudo apt install policycoreutils selinux-basics selinux-utils -y sudo selinux-activate # No SLAVE usu\u00e1rio root # Fa\u00e7a o procedimento de troca de chaves ssh com o seu pr\u00f3prio usu\u00e1rio sudo semanage fcontext -a -t ssh_home_t '/var/lib/postgresql/.ssh(/.*)?' sudo restorecon -vvRF /var/lib/postgresql/.ssh/","title":"Troca de chaves"},{"location":"testes/","text":"Roteiro de testes PaymentQR: Aplica\u00e7\u00e3o Bigo Comercios APIs PaymentQR Automa\u00e7\u00e3o de Testes PaymentQR: Aplica\u00e7\u00e3o Bigo Comercios APIs PaymentQR Fluxo de produtos PaymentQR: BillProvider Scheduler Como obter e realizar as evid\u00eancias: Consultar os itens abaixo nesse Link : Testes manuais da ISO 8583 (Pagamentos QR Code) Collection do Postman QRCode (PaymentQR)","title":"Roteiro de testes PaymentQR:"},{"location":"testes/#roteiro-de-testes-paymentqr","text":"Aplica\u00e7\u00e3o Bigo Comercios APIs PaymentQR","title":"Roteiro de testes PaymentQR:"},{"location":"testes/#automacao-de-testes-paymentqr","text":"Aplica\u00e7\u00e3o Bigo Comercios APIs PaymentQR","title":"Automa\u00e7\u00e3o de Testes PaymentQR:"},{"location":"testes/#fluxo-de-produtos-paymentqr","text":"BillProvider Scheduler","title":"Fluxo de produtos PaymentQR:"},{"location":"testes/#como-obter-e-realizar-as-evidencias","text":"","title":"Como obter e realizar as evid\u00eancias:"},{"location":"testes/#consultar-os-itens-abaixo-nesse-link","text":"Testes manuais da ISO 8583 (Pagamentos QR Code) Collection do Postman QRCode (PaymentQR)","title":"Consultar os itens abaixo nesse Link:"},{"location":"swagger/bill-provider-service/bill-provider-service-swagger-page/","text":"","title":"Bill provider service swagger page"},{"location":"swagger/bill-provider-service/bill-provider-service-swagger-page/#_1","text":"","title":""},{"location":"swagger/merchant-service/merchant-service-swagger-page/","text":"","title":"Merchant service swagger page"},{"location":"swagger/qr-code-generator/qr-code-generator-swagger-page/","text":"Documenta\u00e7\u00e3o da API de gera\u00e7\u00e3o de QRCode","title":"Documenta\u00e7\u00e3o da API de gera\u00e7\u00e3o de QRCode"},{"location":"swagger/qr-code-generator/qr-code-generator-swagger-page/#documentacao-da-api-de-geracao-de-qrcode","text":"","title":"Documenta\u00e7\u00e3o da API de gera\u00e7\u00e3o de QRCode"},{"location":"swagger/recover-data/recover-data-swagger-page/","text":"","title":"Recover data swagger page"},{"location":"swagger/recover-data/recover-data-swagger-page/#_1","text":"","title":""},{"location":"swagger/scheduler/scheduler-swagger-page/","text":"","title":"Scheduler swagger page"},{"location":"swagger/scheduler/scheduler-swagger-page/#_1","text":"","title":""},{"location":"swagger/terminals/terminals-swagger-page/","text":"","title":"Terminals swagger page"},{"location":"swagger/terminals/terminals-swagger-page/#_1","text":"","title":""},{"location":"swagger/transaction-orchestrator/transaction-orchestrator-swagger-page/","text":"","title":"Transaction orchestrator swagger page"},{"location":"swagger/transaction-orchestrator/transaction-orchestrator-swagger-page/#_1","text":"","title":""},{"location":"swagger/transaction-service/transaction-service-swagger-page/","text":"","title":"Transaction service swagger page"},{"location":"swagger/transaction-service/transaction-service-swagger-page/#_1","text":"","title":""}]}