openapi: 3.0.1
info:
  title: PaymentQR QRCode Generator
  description: 'The PaymentQR QRCode Generator API'
  version: 1.0.0
servers:
  - url: https://homolog-api-gateway.test-teste-prueba.com:9208/mock

paths:
  /v1/qrcode/ping:
    get:
      tags:
        - Ping QRCode Generator
      summary: Sends a ping to verify qrcodegenerator health.
      operationId: QRCodeGeneratorPing
      responses:
        200:
          description: Success.
  /v1/qrcode/{terminalCode}/staticqr:
    get:
      tags:
        - Static QRCode
      summary: Generate a Static QRCode.
      operationId: StaticQRCode
      parameters:
        - in: path
          name: terminalCode
          description: The terminal code
          schema:
            type: string
          required: true
          example: 'X000RV15'
        - in: query
          name: currency
          description: The currency associated to Static QRCode.
          schema:
            type: string
          required: true
          example: '840'
        - in: query
          name: plan
          description: 'Merchant plan used for the transaction. 0 for common purchases 1 for gas station purchases 2 for mini-market purchases. (TLV 80-05).'
          schema:
            type: integer
          required: false
          example: 1
        - in: query
          name: installments
          schema:
            type: string
            maxLength: 2
          description: Number of installments for the transaction, in case of 02 (Merchant installments) or 09 (VNG).
          example: '1'
          required: false
        - in: query
          name: amountOther
          schema:
            $ref: '#/components/schemas/AmountOther'
          required: false
          description: Amount used in case of 04 (Cash Discount) Transaction Type (VNG).
          example: '1'
        - in: query
          name: transactionType
          schema:
            $ref: '#/components/schemas/TransactionType'
          required: false
          description: The possible transaction types (VNG).
        - in: query
          name: purchaseID
          description: Purchase ID associated to the transaction, it will be present for a Single-use Static QRCode.
          schema:
            type: string
          required: false
          example: '130900'
        - in: header
          name: request-id
          description: The auto generated request ID used for tracking the request.
          schema:
            type: string
          required: true
        - in: header
          name: apiKey
          description: The code sent by API Gateway to know which acquirer has originated the request.
          schema:
            type: string
          required: true
      responses:
        200:
          description: The Static QRCode response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrCodeResponse'
        400:
          description: Bad Request. Check the returnCode and returnMessage for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        401:
          description: Unauthorized access.
        500:
          description: Internal server error. Check the returnCode and returnMessage for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
  /v1/qrcode/{terminalCode}/dynamicqr:
    post:
      tags:
        - Dynamic QRCode
      summary: Generate a Dynamic QRCode.
      operationId: Dynamic QRCode
      parameters:
        - in: path
          name: terminalCode
          description: The terminal code
          schema:
            type: string
          required: true
          example: 'X000RV15'
        - in: header
          name: request-id
          description: The auto generated request ID used for tracking the request.
          schema:
            type: string
          required: true
        - in: header
          name: apiKey
          description: The code sent by API Gateway to know which acquirer has originated the request.
          schema:
            type: string
          required: true
      requestBody:
        description: The TransactionData model filled correctly.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionData'
        required: true
      responses:
        200:
          description: The Static QRCode response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QrCodeResponse'
        400:
          description: Bad Request. Check the returnCode and returnMessage for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'
        401:
          description: Unauthorized access.
        500:
          description: Internal server error. Check the returnCode and returnMessage for more details.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorInfo'

components:
  schemas:
    QrCodeResponse:
      type: object
      required:
        - request-id
        - qrData
      description: Static QR Code Multiple/Single Use
      properties:
        request-id:
          type: string
          description: The same request-id as request parameter.
          example: '0112313546456'
        qrData:
          type: string
          description: The QRCode in string encoded with base64.
          example: 'MDAwMjAxMzAyNzAwMTF1eS5jb20udm5ldDAxMDgwMTAwODIyNTUyMDQ1ODEyNTMwMzk5OTU4MDJVWTU5MTBMT1MgVE9OVE9TNjAxME1PTlRFVklERU82MjIwMDMxMTAwMVgwTExZOTAxMDcwMTU4MDI1MDAxMXV5LmNvbS52bmV0MDIwMTEwNTAxMDYzMDQ0REIy'
    TransactionData:
      type: object
      required:
        - purchaseID
        - currency
        - amount
      description: Object containing the transaction details
      properties:
        currency:
          type: string
          description: 'This field indicates the currency code used in the transaction, according to ISO 4217. For example: 840 for US Dollars, 986 for Brazilian Reais, 858 for Uruguayan Pesos. (TLV 53).'
          maxLength: 3
          example: '840'
        installments:
          type: string
          description: 'Number of installments for the transaction.'
          maxLength: 2
          example: '1'
        taxDeductionIndicator:
          type: string
          description: 'Tax deduction indicator. (Known as INDI in Uruguay). (TLV 80-02).'
          maxLength: 2
          example: '1'
        amountOther:
          $ref: '#/components/schemas/AmountOther'
        amount:
          type: number
          description: 'This field indicates the transaction amount, including 2 decimal points. (TLV 54 and TLV 80-03).'
          maxLength: 16
          example: 1.45
        taxBaseAmount:
          type: number
          description: 'This field indicates the transaction amount without taxes, including 2 decimal points. Known as Monto gravado in Uruguay. (TLV 80-04).'
          maxLength: 16
          example: 1.0
        plan:
          type: string
          description: 'Merchant plan used for the transaction. 0 for common purchases 1 for gas station purchases 2 for mini-market purchases. (TLV 80-05).'
          maxLength: 1
          example: '1'
        taxValue:
          type: integer
          description: 'This field indicates the tax value. (TLV 80-06).'
          maxLength: 16
          example: 22
        purchaseID:
          type: string
          description: 'Unique identifier that indicates the Purchase associated to a transaction. This ID is generated by the Client. (TLV 80-07).'
          maxLength: 64
          example: '130900'
        transactionType:
          $ref: '#/components/schemas/TransactionType'
        billNumber:
          type: string
          description: 'Contains the bill number entered by the merchant. Mandatory for “Consumidor Final” category transactions, and Optional for “Boleta con RUT” type transactions.'
          maxLength: 9
          example: '000000001'
        purposeOfTransaction:
          type: string
          description: >
            Any value as defined by the merchant or acquirer in order to define the purpose of the transaction (purchase category):
            * `01` - Boleta con RUT.
            * `02` - Consumidor final.
          enum:
            - '01'
            - '02'

    ErrorInfo:
      type: object
      required:
        - request-id
        - timestamp
      properties:
        request-id:
          type: string
          description: The auto generated request ID used for tracking the request.
        timestamp:
          type: string
          description: The date-time when occurred the error.
        returnCode:
          $ref: '#/components/schemas/ReturnCode'
        returnDescription:
          type: string
          description: Return description when occurs some warning (200 HTTP Response) or error (500 HTTP Response).
      example:
        request-id: '0112313546456'
        timestamp: '2017-07-21T17:32:28Z'
        returnCode: '02'
        returnDescription: Terminal code not found in database.
    ReturnCode:
      type: string
      description: >
        The returnCode for the requests to HST QRCode Generator can return the following values on the 'returnCode' property:
         * `01` - Ok with a warning condition. Check the 'returnDescription' property for more details.
         * `02` - Specific record not found in database. Check the 'returnDescription' property for more details.
         * `03` - Data field in database to build TLV is null or empty. Check the 'returnDescription' property for more details.
         * `04` - Permission error. Check the 'returnDescription' property for more details.
         * `05` - Necessary query parameter not found in request. Check the 'returnDescription' property for more details.
         * `06` - Invalid input data. Verify and correct the given data.
      enum:
        - '01'
        - '02'
        - '03'
        - '04'
        - '05'
        - '06'
    TransactionType:
      maxLength: 2
      type: string
      description: >
        The possible transaction types (VNG).
          * 01 - Regular Sale
          * 02 - Merchant Installments
          * 03 - Miles
          * 04 - Cash Discount
          * 05 - Extra financing
          * 06 - Check in
          * 07 - Checkout
          * 08 - Surcharge
          * 09 - To be defined
    AmountOther:
      type: string
      maxLength: 2
      description: Amount used in case of 04 (Cash Discount) Transaction Type (VNG).
      example: '1'
